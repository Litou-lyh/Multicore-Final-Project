name: CI Build
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:

    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    - uses: Jimver/cuda-toolkit@v0.2.11
      id: cuda-toolkit
      with:
        cuda: '10.2.0'

    - run: echo "Installed cuda version is: ${{steps.cuda-toolkit.outputs.cuda}}"

    - run: echo "Cuda install location: ${{steps.cuda-toolkit.outputs.CUDA_PATH}}"

    - name: Install cuda 10.2
      run: nvcc -V
            

    - name: Install dependency packages
      run: |
        sudo sed -i -E 's|^deb ([^ ]+) (.*)$|deb [arch=amd64] \1 \2\ndeb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ \2|' /etc/apt/sources.list
        sudo dpkg --add-architecture arm64
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends \
                crossbuild-essential-arm64 \
                git \
                cmake \
                python3-pip\
                libpython2-dev \
                libpython2-dev:arm64  \
                python3-numpy

    - name: Fetch opencv and opencv_contrib
      run: |
        git clone https://github.com/opencv/opencv.git 
        git clone https://github.com/opencv/opencv_contrib.git

    - name: Configure and Build Opencv
      run: |
        mkdir cv_build
        cd cv_build
        cmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_INSTALL_PREFIX=/usr/local  -D OPENCV_EXTRA_MODULES_PATH=../opencv_contrib/modules/ -D WITH_TBB=OFF  -D WITH_CUDA=OFF -D BUILD_opencv_gpu=OFF -D BUILD_opencv_gpuarithm=OFF -D OPENCV_GENERATE_PKGCONFIG=ON ../opencv
        make -j$(nproc --all)
        sudo make install

    - name: Build 
      run: |
        mkdir build
        cd build
        cmake ..
        make
        ./ORBExtractor ../train4.jpg ../keypoints.txt descriptor_test.txt
    
    - name: Compare results
      run: |
        chmod +x ./compareOutput.sh
        ./compareOutput.sh
        
        